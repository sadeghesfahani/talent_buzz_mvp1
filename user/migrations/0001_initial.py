# Generated by Django 5.0.6 on 2024-06-04 20:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(blank=True, max_length=120)),
                ('kvk_number', models.CharField(blank=True, max_length=120)),
                ('vat_id', models.CharField(blank=True, max_length=120)),
                ('bank_account', models.CharField(blank=True, max_length=120)),
                ('company_logo', models.ImageField(blank=True, upload_to='company_logo')),
                ('company_description', models.TextField(blank=True)),
                ('company_website', models.URLField(blank=True)),
                ('company_size', models.CharField(blank=True, max_length=120)),
                ('company_industry', models.CharField(blank=True, max_length=120)),
                ('company_type', models.CharField(blank=True, max_length=120)),
                ('company_founded', models.DateField(blank=True, null=True)),
                ('company_location', models.CharField(blank=True, max_length=120)),
                ('company_specialities', models.JSONField(blank=True, default=list)),
                ('company_social_media', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='FreelancerDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('experience', models.JSONField(blank=True, default=list)),
                ('education', models.JSONField(blank=True, default=list)),
                ('certification', models.JSONField(blank=True, default=list)),
                ('portfolio', models.JSONField(blank=True, default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Measures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(max_length=120)),
                ('value', models.CharField(blank=True, max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(blank=True, max_length=120)),
                ('identity', models.JSONField(blank=True, default=dict)),
                ('measures', models.ManyToManyField(blank=True, related_name='user_measures', to='user.measures')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, db_index=True, max_length=17, null=True, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.companydetails')),
                ('freelancer_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.freelancerdetails')),
                ('personal_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.personaldetails')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(blank=True, max_length=120)),
                ('equivalents', models.CharField(blank=True, max_length=1200)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_skills', to='user.skill')),
            ],
        ),
        migrations.AddField(
            model_name='freelancerdetails',
            name='skills',
            field=models.ManyToManyField(blank=True, related_name='user_skills', to='user.skill'),
        ),
    ]
